-- An application user who can access the app. Does not include profile information.k
create table if not exists users
(
    id bigserial primary key,
    -- login name, usually an email address for an internal user.
    name text not null,
    -- the application is responsible for hashing the password
    password text,
    status text check ( status in ('verifying-email', 'normal', 'reset-password', 'disabled') ) not null,
    -- a random string generated by application and used for verifying email address or resetting password.
    challenge text
);

create unique index if not exists users_name_index on users (name);

-- An AI personality with its own system prompt and voice model.
create table if not exists modelled_persons
(
    id bigserial primary key,
    user_id bigint references users (id) on delete cascade not null,
    name text not null;
    -- Background context prompt for the system role, e.g. you are Esther in Shushan.
    context_prompt text not null;
);
create index if not exists modelled_persons_user_id_index on modelled_persons (user_id);

-- Voice recording samples of an AI personality.
create table if not exists voice_samples
(
    id bigserial primary key,
    modelled_person_id bigint references modelled_person (id) on delete cascade not null,
    file_name text not null,
    timestamp timestamp with time zone not null
);
create index if not exists voice_sample_modelled_person_id_index on voice_samples (modelled_person_id);

-- Voice models of an AI personality.
create table if not exists voice_models
(
    id bigserial primary key,
    voice_sample_id bigint references voice_sample (id) on delete cascade not null,
    file_name text not null,
    timestamp timestamp with time zone not null
);

create index if not exists voice_model_sample_id_index on voice_models (voice_sample_id);

-- Text converted to speech using a user's voice model.
create table if not exists inferred_speech
(
    id bigserial primary key,
    voice_model_id bigint references voice_models(id) on delete cascade not null,
    prompt text not null,
    file_name text not null,
    timestamp timestamp with time zone not null
);

create index if not exists inferred_speech_voice_model_id_index on inferred_speech (voice_model_id);




-- TODO FIXME

-- A single piece of speech in a conversation.
create table if not exists conversation_speech
(
    id bigserial primary key,
    user_id bigint references users (id) on delete cascade not null,
    file_name text not null,
    timestamp timestamp with time zone not null
);

create table if not exists user_prompt
(
    id bigserial primary key,
    user_id bigint references users (id) on delete cascade not null,
    user_prompt text not null,
    timestamp timestamp with time zone not null
);

create index if not exists inferred_speech_voice_model_id_index on inferred_speech (voice_model_id);
